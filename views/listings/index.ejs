<%- layout("layouts/boilerplate") %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
:root {
  --primary-color: #FF385C;
  --text-dark: #222222;
  --text-light: #717171;
  --bg-light: #f7f7f7;
  --border-color: #dddddd;
  --shadow: 0 2px 8px rgba(0,0,0,0.08);
  --hover-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  margin: 0;
  padding: 0;
  background: white;
}

.container {
  max-width: 1800px;
  margin: 0 auto;
  padding: 0;
}

/* Filter Bar Styles */
.filter-container {
  background: white;
  padding: 16px 0;
  border-bottom: 1px solid var(--border-color);
  position: sticky;
  top: 0;
  z-index: 100;
  width: 100%;
}

.filter-scroll-container {
  width: 100%;
  overflow-x: auto;
  padding-bottom: 8px;
  scrollbar-width: none;
}

.filter-scroll {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 0 24px;
  width: max-content;
  min-width: 100%;
}

.filter-scroll-container::-webkit-scrollbar {
  display: none;
}

.filter-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 80px;
  flex-shrink: 0;
}

.filter-item:hover {
  background: var(--bg-light);
}

.filter-item.active {
  background: var(--bg-light);
  color: var(--primary-color);
}

.filter-item.active .filter-icon {
  color: var(--primary-color);
}

.filter-icon {
  font-size: 24px;
  color: var(--text-light);
  transition: color 0.2s ease;
}

.filter-label {
  font-size: 12px;
  font-weight: 500;
  color: var(--text-light);
  transition: color 0.2s ease;
}

.filter-item.active .filter-label {
  color: var(--primary-color);
}

/* Listings Grid */
.listings-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 24px;
  padding: 24px;
  width: 100%;
}

/* Listing Card */
.listing-card {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: all 0.2s ease;
  position: relative;
}

.listing-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--hover-shadow);
}

.listing-image-container {
  position: relative;
  width: 100%;
  padding-top: 75%;
}

.listing-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.listing-card:hover .listing-image {
  transform: scale(1.03);
}

.listing-details {
  padding: 16px;
}

.listing-location {
  font-size: 14px;
  color: var(--text-light);
  margin-bottom: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.listing-title {
  font-size: 16px;
  font-weight: 500;
  color: var(--text-dark);
  margin-bottom: 8px;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.listing-price {
  font-size: 18px;
  font-weight: 600;
  color: var(--text-dark);
}

.listing-price span {
  font-weight: 400;
  font-size: 16px;
  color: var(--text-light);
}

.wishlist-button {
  position: absolute;
  top: 12px;
  right: 12px;
  background: white;
  border: none;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.wishlist-button:hover {
  transform: scale(1.1);
}

.wishlist-button i {
  color: var(--text-dark);
  font-size: 16px;
}

.wishlist-button.saved i {
  color: var(--primary-color);
}

.listing-rating {
  position: absolute;
  bottom: 12px;
  right: 12px;
  background: rgba(255, 255, 255, 0.9);
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 14px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 4px;
  backdrop-filter: blur(2px);
}

.listing-rating i {
  color: var(--primary-color);
}

/* Admin Controls */
.admin-controls {
  padding: 16px;
  display: flex;
  gap: 8px;
  border-top: 1px solid var(--border-color);
  margin-top: 8px;
}

.admin-controls .btn {
  flex: 1;
  padding: 8px 16px;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  transition: all 0.2s ease;
}

/* No listings styles */
.no-listings {
  grid-column: 1 / -1;
  text-align: center;
  padding: 60px 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.no-listings-icon {
  font-size: 48px;
  color: var(--text-light);
  margin-bottom: 16px;
}

.no-listings h3 {
  margin-bottom: 8px;
  color: var(--text-dark);
}

.no-listings p {
  color: var(--text-light);
  margin-bottom: 16px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .filter-scroll {
    gap: 12px;
    padding: 0 16px;
  }
  
  .filter-item {
    min-width: 70px;
    padding: 8px 12px;
  }
  
  .listings-grid {
    padding: 16px;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }
}

@media (max-width: 480px) {
  .filter-scroll {
    gap: 8px;
  }
  
  .filter-item {
    min-width: 60px;
    padding: 8px;
  }
  
  .filter-icon {
    font-size: 20px;
  }
  
  .filter-label {
    font-size: 11px;
  }
}
</style>

<div class="filter-container">
  <div class="filter-scroll-container">
    <div class="filter-scroll">
      <div class="filter-item <%= !filters?.category ? 'active' : '' %>" onclick="setCategory('')">
        <i class="fas fa-border-all filter-icon"></i>
        <span class="filter-label">All</span>
      </div>
      
      <div class="filter-item <%= filters?.category === 'Beach' ? 'active' : '' %>" onclick="setCategory('Beach')">
        <i class="fas fa-umbrella-beach filter-icon"></i>
        <span class="filter-label">Beach</span>
      </div>
      
      <div class="filter-item <%= filters?.category === 'Mountain' ? 'active' : '' %>" onclick="setCategory('Mountain')">
        <i class="fas fa-mountain filter-icon"></i>
        <span class="filter-label">Mountain</span>
      </div>
      
      <div class="filter-item <%= filters?.category === 'City' ? 'active' : '' %>" onclick="setCategory('City')">
        <i class="fas fa-city filter-icon"></i>
        <span class="filter-label">City</span>
      </div>
      
      <div class="filter-item <%= filters?.category === 'Countryside' ? 'active' : '' %>" onclick="setCategory('Countryside')">
        <i class="fas fa-tree filter-icon"></i>
        <span class="filter-label">Countryside</span>
      </div>
      
      <div class="filter-item <%= filters?.category === 'Apartment' ? 'active' : '' %>" onclick="setCategory('Apartment')">
        <i class="fas fa-building filter-icon"></i>
        <span class="filter-label">Apartment</span>
      </div>
      
      <div class="filter-item <%= filters?.category === 'Villa' ? 'active' : '' %>" onclick="setCategory('Villa')">
        <i class="fas fa-home filter-icon"></i>
        <span class="filter-label">Villa</span>
      </div>
    </div>
  </div>
</div>

<div class="container">
  <div class="listings-grid">
    <% if (allListings.length === 0) { %>
      <div class="no-listings">
        <i class="fas fa-search no-listings-icon"></i>
        <h3>No listings found</h3>
        <p>Try adjusting your filters or search criteria</p>
        <a href="/listings" class="btn btn-primary" style="display: inline-block; margin-top: 16px;">Clear all filters</a>
      </div>
    <% } else { %>
      <% for (let listing of allListings) { %>
        <div class="listing-card">
          <a href="/listings/<%= listing._id %>" style="text-decoration: none; color: inherit;">
            <div class="listing-image-container">
              <img src="<%= listing.image?.url || listing.image || 'default-image.jpg' %>" 
                   alt="<%= listing.title %>" 
                   class="listing-image"
                   loading="lazy">
              
              <button class="wishlist-button <%= listing.saved ? 'saved' : '' %>">
                <i class="<%= listing.saved ? 'fas' : 'far' %> fa-heart"></i>
              </button>
              
              <% if (listing.rating) { %>
                <div class="listing-rating">
                  <i class="fas fa-star"></i>
                  <span><%= listing.rating.toFixed(1) %></span>
                </div>
              <% } %>
            </div>
            
            <div class="listing-details">
              <div class="listing-location">
                <i class="fas fa-map-marker-alt"></i>
                <%= listing.location %>
              </div>
              <h3 class="listing-title"><%= listing.title %></h3>
              <div class="listing-price">
                â‚¹<%= listing.price.toLocaleString() %> <span>night</span>
              </div>
            </div>
          </a>
          
          <% if (currentUser && currentUser.isAdmin) { %>
            <div class="admin-controls">
              <a href="/listings/<%= listing._id %>/edit" class="btn btn-warning">
                <i class="fas fa-edit"></i> Edit
              </a>
              <form action="/listings/<%= listing._id %>?_method=DELETE" method="POST" style="display: inline;">
                <button class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this listing?')">
                  <i class="fas fa-trash"></i> Delete
                </button>
              </form>
            </div>
          <% } %>
        </div>
      <% } %>
    <% } %>
  </div>
</div>

<script>
function setCategory(category) {
  const url = new URL(window.location);
  if (category) {
    url.searchParams.set('category', category);
  } else {
    url.searchParams.delete('category');
  }
  window.location = url;
}

document.querySelectorAll('.wishlist-button').forEach(button => {
  button.addEventListener('click', async function(e) {
    e.preventDefault();
    e.stopPropagation();
    
    const listingId = this.closest('a').href.split('/').pop();
    const isSaved = this.classList.contains('saved');
    
    // Optimistic UI update
    this.classList.toggle('saved');
    const icon = this.querySelector('i');
    icon.classList.toggle('far');
    icon.classList.toggle('fas');
    
    try {
      const response = await fetch(`/listings/${listingId}/wishlist`, {
        method: isSaved ? 'DELETE' : 'POST',
        headers: {
          'Content-Type': 'application/json',
        }
      });
      
      if (!response.ok) {
        // Revert UI if request fails
        this.classList.toggle('saved');
        icon.classList.toggle('far');
        icon.classList.toggle('fas');
        throw new Error('Failed to update wishlist');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Failed to update wishlist. Please try again.');
    }
  });
});

// Add smooth scroll behavior for filter bar
document.querySelectorAll('.filter-item').forEach(item => {
  item.addEventListener('click', function() {
    const scrollContainer = document.querySelector('.filter-scroll-container');
    const itemLeft = this.offsetLeft;
    const itemWidth = this.offsetWidth;
    const containerWidth = scrollContainer.offsetWidth;
    
    scrollContainer.scrollTo({
      left: itemLeft - (containerWidth / 2) + (itemWidth / 2),
      behavior: 'smooth'
    });
  });
});
</script>